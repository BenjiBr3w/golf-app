<?php

namespace App\Providers;

use Illuminate\Foundation\Support\Providers\AuthServiceProvider as ServiceProvider;
use Illuminate\Support\Facades\Gate;

class AuthServiceProvider extends ServiceProvider
{
    /**
     * The policy mappings for the application.
     *
     * @var array<class-string, class-string>
     */
    protected $policies = [
        // Example: 'App\Models\Post' => 'App\Policies\PostPolicy',
    ];

    /**
     * Register any authentication / authorization services.
     * This was an attempt made to use gates for different roles in the web app
     */
    public function boot(): void
    {
        $this->registerPolicies();

        // Defines a gate for admin-only access
        Gate::define('admin-only', function ($user) {
            return $user->role === 'admin'; // Assumes there is a 'role' field in the users table
        });

        // Defines a gate for editor-only access
        Gate::define('editor-only', function ($user) {
            return $user->role === 'editor';
        });

        // Defines a gate for basic user access
        Gate::define('user-only', function ($user) {
            return $user->role === 'user';
        });

        Gate::define('edit-post', function ($user, $post) {
            return $user->id === $post->user_id || $user->role === 'admin';
        });
    }
}
